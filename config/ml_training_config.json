{
  "data_source": {
    "hdfs_feature_path": "hdfs://localhost:9001/traffic/features",
    "feature_store_path": "hdfs://localhost:9001/traffic/feature_store",
    "target_columns": ["speed_mph", "volume_vehicles_per_hour"],
    "feature_exclude_columns": ["sensor_id", "timestamp", "speed_mph", "volume_vehicles_per_hour"],
    "timestamp_column": "timestamp",
    "sensor_id_column": "sensor_id",
    "min_data_points": 10000,
    "max_data_points": 1000000
  },
  "data_splitting": {
    "train_ratio": 0.7,
    "validation_ratio": 0.2,
    "test_ratio": 0.1,
    "stratify_by": "sensor_id",
    "time_based_split": true,
    "shuffle": false,
    "random_state": 42
  },
  "data_preprocessing": {
    "handle_missing_values": true,
    "missing_value_strategy": "interpolate",
    "outlier_detection": true,
    "outlier_method": "iqr",
    "outlier_threshold": 3.0,
    "normalize_features": true,
    "normalization_method": "standard",
    "feature_selection": true,
    "feature_selection_method": "variance",
    "variance_threshold": 0.01
  },
  "models": {
    "linear_regression": {
      "enabled": true,
      "params": {
        "fit_intercept": true,
        "normalize": false,
        "copy_X": true,
        "n_jobs": -1
      },
      "hyperparameter_tuning": false
    },
    "random_forest": {
      "enabled": true,
      "params": {
        "n_estimators": 100,
        "max_depth": 10,
        "min_samples_split": 2,
        "min_samples_leaf": 1,
        "max_features": "sqrt",
        "bootstrap": true,
        "n_jobs": -1,
        "random_state": 42
      },
      "hyperparameter_tuning": true,
      "param_grid": {
        "n_estimators": [50, 100, 200],
        "max_depth": [5, 10, 15, null],
        "min_samples_split": [2, 5, 10],
        "min_samples_leaf": [1, 2, 4],
        "max_features": ["sqrt", "log2", null]
      }
    },
    "xgboost": {
      "enabled": true,
      "params": {
        "n_estimators": 100,
        "max_depth": 6,
        "learning_rate": 0.1,
        "subsample": 0.8,
        "colsample_bytree": 0.8,
        "gamma": 0,
        "min_child_weight": 1,
        "reg_alpha": 0,
        "reg_lambda": 1,
        "random_state": 42,
        "n_jobs": -1
      },
      "hyperparameter_tuning": true,
      "param_grid": {
        "n_estimators": [50, 100, 200],
        "max_depth": [3, 6, 9],
        "learning_rate": [0.01, 0.1, 0.2],
        "subsample": [0.6, 0.8, 1.0],
        "colsample_bytree": [0.6, 0.8, 1.0]
      }
    },
    "gradient_boosting": {
      "enabled": true,
      "params": {
        "n_estimators": 100,
        "learning_rate": 0.1,
        "max_depth": 3,
        "min_samples_split": 2,
        "min_samples_leaf": 1,
        "subsample": 1.0,
        "random_state": 42
      },
      "hyperparameter_tuning": true,
      "param_grid": {
        "n_estimators": [50, 100, 200],
        "learning_rate": [0.01, 0.1, 0.2],
        "max_depth": [3, 5, 7],
        "subsample": [0.6, 0.8, 1.0]
      }
    },
    "support_vector_regression": {
      "enabled": false,
      "params": {
        "kernel": "rbf",
        "C": 1.0,
        "gamma": "scale",
        "epsilon": 0.1
      },
      "hyperparameter_tuning": true,
      "param_grid": {
        "C": [0.1, 1, 10],
        "gamma": ["scale", "auto"],
        "epsilon": [0.01, 0.1, 0.2]
      }
    }
  },
  "training": {
    "cross_validation": {
      "enabled": true,
      "cv_folds": 5,
      "scoring": "neg_mean_squared_error",
      "shuffle": true,
      "random_state": 42
    },
    "hyperparameter_tuning": {
      "method": "grid_search",
      "cv_folds": 3,
      "n_jobs": -1,
      "scoring": "neg_mean_squared_error",
      "verbose": 1
    },
    "early_stopping": {
      "enabled": true,
      "patience": 10,
      "min_delta": 0.001
    },
    "batch_training": {
      "enabled": false,
      "batch_size": 10000,
      "shuffle_batches": true
    }
  },
  "evaluation": {
    "metrics": [
      "rmse",
      "mae",
      "mape",
      "r2_score",
      "max_error",
      "mean_squared_log_error"
    ],
    "generate_plots": true,
    "plot_types": [
      "residual_plot",
      "prediction_vs_actual",
      "feature_importance",
      "learning_curve",
      "validation_curve"
    ],
    "residual_analysis": true,
    "prediction_intervals": true,
    "confidence_level": 0.95
  },
  "model_selection": {
    "primary_metric": "rmse",
    "minimize_metric": true,
    "selection_criteria": {
      "rmse_weight": 0.4,
      "mae_weight": 0.3,
      "r2_weight": 0.2,
      "training_time_weight": 0.1
    },
    "ensemble_models": true,
    "ensemble_methods": ["voting", "stacking"]
  },
  "model_persistence": {
    "hdfs_model_path": "hdfs://localhost:9001/traffic/models",
    "local_model_path": "models",
    "model_format": "pickle",
    "save_metadata": true,
    "versioning": {
      "enabled": true,
      "version_format": "semantic",
      "auto_increment": true
    },
    "model_registry": {
      "enabled": true,
      "mlflow_enabled": false,
      "mlflow_tracking_uri": "http://localhost:5000",
      "experiment_name": "traffic_prediction"
    }
  },
  "spark_config": {
    "app_name": "TrafficPredictionMLTraining",
    "master": "local[*]",
    "config": {
      "spark.sql.adaptive.enabled": "true",
      "spark.sql.adaptive.coalescePartitions.enabled": "true",
      "spark.executor.memory": "4g",
      "spark.driver.memory": "2g",
      "spark.executor.cores": "2",
      "spark.sql.execution.arrow.pyspark.enabled": "true",
      "spark.serializer": "org.apache.spark.serializer.KryoSerializer",
      "spark.sql.adaptive.skewJoin.enabled": "true",
      "spark.sql.adaptive.localShuffleReader.enabled": "true"
    }
  },
  "logging": {
    "level": "INFO",
    "log_to_file": true,
    "log_file_path": "logs/ml_training.log",
    "log_format": "%(asctime)s - %(name)s - %(levelname)s - %(message)s",
    "max_log_size": "10MB",
    "backup_count": 5
  },
  "performance": {
    "parallel_training": true,
    "max_workers": 4,
    "memory_optimization": true,
    "cache_data": true,
    "checkpoint_frequency": 100,
    "progress_reporting": true
  },
  "validation": {
    "data_quality_checks": true,
    "feature_drift_detection": true,
    "model_drift_detection": true,
    "statistical_tests": true,
    "min_samples_per_sensor": 100,
    "max_missing_percentage": 0.1
  }
}